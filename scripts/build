#!/usr/bin/env bash

set -e

# -- Globals -- #

declare -A project_names
project_names["accelerate"]="Accelerate"

input_dir="content"
output_dir="output"

declare -A output_paths

# -- Functions -- #

create_output_path() {
  echo "${output_dir}/${1#$input_dir/}" | sed 's/\.md$/.html/'
}

slugify() {
  local page="${1#$input_dir/}"  # Remove input dir prefix
  page="${page%.*}"              # Remove extension

  if [[ "$page" == "index" ]]; then
    echo "/"
  elif [[ "$page" == */index ]]; then
    echo "/${page%index}"
  else
    echo "/$page/"
  fi
}

build_page() {
  local page="$1"
  local template="$2"
  local site_name="$3"
  local stylesheet="$4"
  local extra_metadata="$5"

  local output_path=$(create_output_path "$page")
  local slug=$(slugify "$page")

  output_paths["$output_path"]=1  # mark as expected

  # Skip if output is newer than source
  if [[ -f "$output_path" && "$output_path" -nt "$page" ]]; then
    return
  else
    echo "[build] $slug"
  fi

  mkdir -p "$(dirname "$output_path")"

  pandoc "$page" \
    --standalone \
    --template "$template" \
    --metadata "site:https://ritam.me" \
    --metadata "author:Ritam Sarmah" \
    --metadata "slug:$slug" \
    --metadata "site_name:$site_name" \
    --metadata "stylesheet:$stylesheet" \
    $extra_metadata \
    --output "$output_path"
}

build_site() {
  cd src

  # Static
  for path in $(fd "" static --type file); do
    output_path="$output_dir/${path#static/}"
    mkdir -p "$(dirname "$output_path")"

    if [ ! -f "$output_path" ] || [ "$path" -nt "$output_path" ]; then
        cp "$path" "$output_path"
        echo "[copy] $path"
    fi

    output_paths["$output_path"]=1
  done

  # Default
  local pages=$(fd . "$input_dir" --maxdepth 1 --extension md)
  for page in $pages; do
    build_page "$page" "templates/default.html" "Ritam Sarmah" "default" ""
  done

  # Projects
  local paths=$(fd . "$input_dir/projects" --maxdepth 1 --type directory)
  for path in $paths; do
    local project=$(basename "$path")
    local pages=$(fd . "$path" --extension md)

    for page in $pages; do
      build_page "$page" \
        "templates/project.html" \
        "${project_names[$project]}" \
        "$project" \
        "--metadata project:$project"
    done
  done

  # Delete outdated files in output
  fd --no-ignore --type file "" "$output_dir" | while read -r path; do
    if [[ -z "${output_paths[$path]+_}" ]]; then
      echo "[remove] $path"
      rm -f "$path"
    fi
  done
}

# -- Main -- #

mkdir -p "$output_dir"
output_dir=$(realpath "$output_dir")
build_site
